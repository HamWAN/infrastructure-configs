- name: Ensure prepreqs are installed
  apt:
    pkg={{ item }}
    state=present
    update_cache=yes
  with_items:
    - ruby
    - bundler
    - sqlite3
    - libsqlite3-dev
    - git
    - zlib1g-dev

- name: clone the repo
  git: repo=https://github.com/prometheus/promdash
       dest=/opt/prometheus/promdash
       force=yes

- name: bundle
  command: bundle install --without mysql postgresql
  args:
    chdir: /opt/prometheus/promdash

- name: build
  shell: "RAILS_ENV=production DATABASE_URL=sqlite3:/etc/prometheus/promdash.sqlite3 rake db:migrate"
  args:
    chdir: /opt/prometheus/promdash

- name: build
  shell: "RAILS_ENV=production DATABASE_URL=sqlite3:/etc/prometheus/promdash.sqlite3 rake assets:precompile"
  args:
    chdir: /opt/prometheus/promdash


- name: Get iptables rules
  command: /bin/cat /etc/rc.local
  register: iptablesrules
  always_run: yes

- name: Add prometheus-console iptable rule
  lineinfile:
    dest=/etc/rc.local
    line="iptables -A INPUT -p tcp --dport 3000 -j ACCEPT"
    insertbefore="iptables -P INPUT DROP"
    state="present"
  when: iptablesrules.stdout.find("3000") == -1

- name: Execute /etc/rc.local to place iptables rules
  command: /etc/rc.local

- name: Generate default script
  template:
    backup=no
    dest=/etc/default/promdash
    src=generic_default.j2
    mode="u=rw,g=r,o=r"
    
- name: Generate init.d script
  template:
    backup=no
    dest=/etc/init.d/promdash
    src=promdash_initscript.j2
    force=yes
    mode="u=rwx,g=rx,o=rw"
  notify: Restart promdash

- name: Setup promdash to start on boot
  command: update-rc.d promdash defaults
