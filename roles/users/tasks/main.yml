---
# tasks file for users

- name: Ensure groups exists
  become: true
  ansible.builtin.group:
    name: "{{ item }}"
  loop:
    - "{{ group_admin }}"
    - "{{ group_user }}"

- name: Ensure admins exist
  become: true
  ansible.builtin.user:
    name: "{{ item }}"
    groups: "{{ group_admin }}"
    shell: "/bin/bash"
  loop: "{{ users_admin | flatten(1) }}"

- name: Ensure users exist
  become: true
  ansible.builtin.user:
    name: "{{ item }}"
    groups: "{{ group_user }}"
    shell: "/bin/bash"
  loop: "{{ users_user | flatten(1) }}"

- name: Ensure ssh keys are present
  become: true
  ansible.posix.authorized_key:
    user: "{{ item }}"
    key: "{{ url_keys }}{{ item }}.key"
    exclusive: true
  loop: "{{ users_admin + users_user | flatten(1) }}"

- name: Ensure sudo access for admin group
  become: true
  ansible.builtin.template:
    src: "sudoers.j2"
    dest: "/etc/sudoers.d/{{ group_admin }}"
    owner: "root"
    group: "root"
    mode: "0640"
    validate: "/usr/sbin/visudo -cf %s"

- name: Audit users in admin group
  ansible.builtin.getent:
    database: group
    key: "{{ group_admin }}"
- ansible.builtin.set_fact:
    users_to_purge: "{{ getent_group[group_admin][2].split(',') | difference(users_admin) }}"

- name: Audit users in user group
  ansible.builtin.getent:
    database: group
    key: "{{ group_user }}"
- ansible.builtin.set_fact:
    users_to_purge: "{{ getent_group[group_user][2].split(',') | difference(users_user) + users_to_purge }}"

- name: Purge extraneous users
  become: true
  ansible.builtin.user:
    name: "{{ item }}"
    remove: true
    state: absent
  loop: "{{ users_to_purge }}"
